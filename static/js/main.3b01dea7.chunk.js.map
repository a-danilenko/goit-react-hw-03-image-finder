{"version":3,"sources":["components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.js","services/imageApi.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","App.js","index.js"],"names":["module","exports","Loader","role","style","s","spinner","size","className","fetchArticles","keyWord","pageNumber","key","fetch","then","response","json","data","hits","Searchbar","state","imageKeyWord","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","this","onSubmit","type","autoComplete","placeholder","onChange","SearchForm","Component","ImageGalleryItem","imageObj","openModal","src","webformatURL","alt","ImageGalleryItemImage","onClick","largeImageURL","Gallery","images","ImageGallery","map","id","Modal","backdropRef","createRef","handleKeyPress","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","Overlay","ref","closeButton","Button","onFetchImage","toast","configure","App","isModalOpen","error","query","fetchImages","isLoading","api","catch","finally","closeModal","prevProps","prevState","snapshot","scrollTo","top","document","body","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,YAAc,6B,kBCA9FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,oBAAoB,qCAAqC,0BAA0B,2CAA2C,mBAAmB,sC,gBCAvPD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,gDAAgD,iBAAmB,6C,iBCA3KD,EAAOC,QAAU,CAAC,YAAY,4B,gBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,sMCEZ,SAASC,IACtB,OACE,qBAAKC,KAAK,QAAV,SACE,sBAAKC,MAAOC,IAAEC,QAAd,UACE,cAAC,IAAD,CAAWC,KAAK,KAAKC,UAAU,cADjC,+CCNN,IASeC,EATO,WAAmC,IAAlCC,EAAiC,uDAAvB,GAAIC,EAAmB,uDAAN,EAC1CC,EAAM,qCACZ,OAAOC,MAAM,sEAAD,OAC4DH,EAD5D,iBAC4EC,EAD5E,4BAC0GC,IAEnHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,S,iBCFFC,E,4MAKnBC,MAAQ,CACNC,aAAc,I,EAGhBC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZH,aAAcE,EAAEE,OAAOC,S,EAI3BC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,cAC/B,EAAKG,SAAS,CACZH,aAAc,M,4CAIlB,WAAU,IACAA,EAAiBU,KAAKX,MAAtBC,aACR,OACE,uBAAMb,UAAWH,IAAEc,UAAWa,SAAUD,KAAKJ,aAA7C,UACE,uBACEM,KAAK,OACLC,aAAa,MACbC,YAAY,mBACZC,SAAUL,KAAKT,aACfI,MAAOL,EACPb,UAAWH,IAAEgC,aAEf,2E,GAnC+BC,a,iBCsBxBC,EAvBU,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACpC,OACE,qBAAKjC,UAAWH,IAAEkC,iBAAlB,SACE,qBAAKG,IAAKF,EAASG,aAAcC,IAAI,GAAGpC,UAAWH,IAAEwC,sBAAuBC,QAAS,WACnFL,EAAUD,EAASO,qB,iBCyCZC,EA5CC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQR,EAAgB,EAAhBA,UACzB,OACE,oBAAIjC,UAAWH,IAAE6C,aAAjB,SACGD,EAAOE,KAAI,SAAAX,GAAQ,OAClB,6BACE,cAAC,EAAD,CAAkBA,SAAUA,EAAUC,UAAWA,KAD1CD,EAASY,U,gBCJLC,E,4MAMnBjC,MAAQ,G,EAERkC,YAAcC,sB,EAUdC,eAAiB,SAAAjC,GACA,WAAXA,EAAEkC,MAGN,EAAK5B,MAAM6B,W,EAGbC,oBAAsB,SAAApC,GAChB,EAAK+B,YAAYM,SAAWrC,EAAEE,SAAW,EAAK6B,YAAYM,SAE9D,EAAK/B,MAAM6B,W,uDAlBb,WACEG,OAAOC,iBAAiB,UAAW/B,KAAKyB,kB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAWhC,KAAKyB,kB,oBAgB7C,WAAU,IACAT,EAAkBhB,KAAKF,MAAvBkB,cAER,OACE,qBACEvC,UAAWH,IAAE2D,QACbC,IAAKlC,KAAKuB,YACVnD,KAAK,eACL2C,QAASf,KAAK4B,oBAJhB,SAME,sBAAKnD,UAAWH,IAAEgD,MAAlB,UACE,qBAAKX,IAAKK,EAAeH,IAAI,KAC7B,wBAAQpC,UAAWH,IAAE6D,YAAapB,QAASf,KAAKF,MAAM6B,QAAtD,wB,GA3CyBpB,a,iBCepB6B,EAhBA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACf,OACE,wBACEnC,KAAK,SACLzB,UAAWH,IAAE8D,OACbrB,QAASsB,EAHX,oG,uBCMJC,IAAMC,Y,IAEeC,E,4MACnBnD,MAAQ,CACNV,QAAS,GACTuC,OAAQ,GACRtC,WAAY,EACZ6D,aAAa,EACbzB,cAAe,GACf0B,MAAO,M,EAoBT3C,SAAW,SAAA4C,GACT,EAAKlD,SAAS,CACZd,QAASgE,EACT/D,WAAY,K,EAIhBgE,YAAc,WACZ,EAAKnD,SAAS,CACZoD,WAAW,IAGbC,EAAI,EAAKzD,MAAMV,QAAS,EAAKU,MAAMT,YAChCG,MAAK,SAAAmC,GAAM,OACV,EAAKzB,UAAS,SAAAJ,GAAK,MAAK,CACtB6B,OAAO,GAAD,mBAAM7B,EAAM6B,QAAZ,YAAuBA,IAC7BtC,WAAYS,EAAMT,WAAa,SAGlCmE,OAAM,SAAAL,GACL,EAAKjD,SAAS,CAAEiD,UAChBJ,IAAMI,MAAM,sBAEbM,SAAQ,WACP,EAAKvD,SAAS,CACZoD,WAAW,Q,EAKnBnC,UAAY,SAAAM,GACV,EAAKvB,SAAS,CAAEgD,aAAa,EAAMzB,mB,EAGrCiC,WAAa,kBAAM,EAAKxD,SAAS,CAAEgD,aAAa,K,wDAnDhD,SAAmBS,EAAWC,EAAWC,GAAW,IAAD,EACrBpD,KAAKX,MAAzBV,EADyC,EACzCA,QAASuC,EADgC,EAChCA,OACbiC,EAAUxE,UAAYA,IACxBqB,KAAKP,SAAS,CACZyB,OAAQ,KAEVlB,KAAK4C,eAGHO,EAAUjC,SAAWA,GACvBY,OAAOuB,SAAS,CACdC,IAAKC,SAASC,KAAKC,aACnBC,SAAU,a,oBAyChB,WAAU,IAAD,EAC0D1D,KAAKX,MAA9D6B,EADD,EACCA,OAAQ2B,EADT,EACSA,UAAWJ,EADpB,EACoBA,YAAazB,EADjC,EACiCA,cAAe0B,EADhD,EACgDA,MAEvD,OACE,sBAAKjE,UAAWH,IAAEkE,IAAlB,UACE,cAAC,EAAD,CAAWzC,SAAUC,KAAKD,WACzBmB,EAAOyC,OAAS,GACf,cAACxC,EAAD,CACED,OAAQA,EACRR,UAAWV,KAAKU,YAInBmC,GAAa,cAAC1E,EAAD,IACb+C,EAAOyC,OAAS,GAAK,cAAC,EAAD,CAAQtB,aAAcrC,KAAK4C,cAChDH,GACC,cAAC,EAAD,CAAOd,QAAS3B,KAAKiD,WAAYjC,cAAeA,IAEjD0B,GAAS,cAAC,IAAD,W,GAjFenC,aCRjCqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFP,SAASQ,eAAe,W","file":"static/js/main.3b01dea7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1HAeO\",\"Modal\":\"Modal_Modal__3e70U\",\"closeButton\":\"Modal_closeButton__1-yZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__zlVcL\",\"SearchForm\":\"Searchbar_SearchForm__1cuwl\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3flYe\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__Cd_6d\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3gjm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3hXdE\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__YDlFr\",\"fullscreenButton\":\"ImageGalleryItem_fullscreenButton__3JQqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon-spin\":\"Loader_icon-spin__3W4-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2uwrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__jmvuw\"};","import { ImSpinner } from 'react-icons/im';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div role=\"alert\">\r\n      <div style={s.spinner}>\r\n        <ImSpinner size=\"40\" className=\"icon-spin\" />\r\n        Грузим...\r\n      </div>\r\n    </div>\r\n  )\r\n}","const fetchArticles = (keyWord = '', pageNumber = 1) => {\r\n  const key = '13651482-b515d2fef8506cbb1df3a0f96';\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${keyWord}&page=${pageNumber}&per_page=12&key=${key}`,\r\n  )\r\n    .then(response => response.json())\r\n    .then(data => data.hits);\r\n};\r\n\r\nexport default fetchArticles;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSearch: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    imageKeyWord: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      imageKeyWord: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSearch(this.state.imageKeyWord);\r\n    this.setState({\r\n      imageKeyWord: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { imageKeyWord } = this.state;\r\n    return (\r\n      <form className={s.Searchbar} onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search images...\"\r\n          onChange={this.handleChange}\r\n          value={imageKeyWord}\r\n          className={s.SearchForm}\r\n        />\r\n        <button>Поиск</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ imageObj, openModal }) => {\r\n  return (\r\n    <div className={s.ImageGalleryItem}>\r\n      <img src={imageObj.webformatURL} alt=\"\" className={s.ImageGalleryItemImage} onClick={() => {\r\n        openModal(imageObj.largeImageURL);\r\n      }} />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  imageObj: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    comments: PropTypes.number.isRequired,\r\n    downloads: PropTypes.number.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst Gallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(imageObj => (\r\n        <li key={imageObj.id}>\r\n          <ImageGalleryItem imageObj={imageObj} openModal={openModal} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      pageURL: PropTypes.string,\r\n      type: PropTypes.string,\r\n      tags: PropTypes.string,\r\n      previewURL: PropTypes.string,\r\n      previewWidt: PropTypes.number,\r\n      previewHeigh: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      webformatWidt: PropTypes.number,\r\n      webformatHeigh: PropTypes.number,\r\n      largeImageURL: PropTypes.string,\r\n      fullHDUR: PropTypes.string,\r\n      imageUR: PropTypes.string,\r\n      imageWidt: PropTypes.number,\r\n      imageHeigh: PropTypes.number,\r\n      imageSiz: PropTypes.number,\r\n      views: PropTypes.number,\r\n      downloads: PropTypes.number,\r\n      favorites: PropTypes.number,\r\n      likes: PropTypes.number,\r\n      comments: PropTypes.number,\r\n      user_id: PropTypes.number,\r\n      user: PropTypes.string,\r\n      userImageURL: PropTypes.string,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Gallery;","import { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {};\r\n\r\n  backdropRef = createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (this.backdropRef.current && e.target !== this.backdropRef.current)\r\n      return;\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={s.Overlay}\r\n        ref={this.backdropRef}\r\n        role=\"presentation\"\r\n        onClick={this.handleBackdropClick}\r\n      >\r\n        <div className={s.Modal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n          <button className={s.closeButton} onClick={this.props.onClose}>X</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({onFetchImage}) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={s.Button}\r\n      onClick={onFetchImage}\r\n    >\r\n      Показать больше\r\n    </button>\r\n  )\r\n};\r\n\r\nButton.propTypes = {\r\n  onFetchImage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Loader from './components/Loader/Loader';\r\nimport api from './services/imageApi';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGalleryItem from './components/ImageGallery/ImageGallery';\r\nimport Modal from './components/Modal/Modal';\r\nimport Button from './components/Button/Button'\r\nimport s from './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    keyWord: '',\r\n    images: [],\r\n    pageNumber: 1,\r\n    isModalOpen: false,\r\n    largeImageURL: '',\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { keyWord, images } = this.state;\r\n    if (prevState.keyWord !== keyWord) {\r\n      this.setState({\r\n        images: [],\r\n      });\r\n      this.fetchImages();\r\n    }\r\n\r\n    if (prevState.images !== images) {\r\n      window.scrollTo({\r\n        top: document.body.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  onSearch = query => {\r\n    this.setState({\r\n      keyWord: query,\r\n      pageNumber: 1,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    api(this.state.keyWord, this.state.pageNumber)\r\n      .then(images =>\r\n        this.setState(state => ({\r\n          images: [...state.images, ...images],\r\n          pageNumber: state.pageNumber + 1,\r\n        })),\r\n      )\r\n      .catch(error => {\r\n        this.setState({ error });\r\n        toast.error('ОЙ );');\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  openModal = largeImageURL => {\r\n    this.setState({ isModalOpen: true, largeImageURL });\r\n  };\r\n\r\n  closeModal = () => this.setState({ isModalOpen: false });\r\n\r\n  render() {\r\n    const { images, isLoading, isModalOpen, largeImageURL, error } = this.state;\r\n\r\n    return (\r\n      <div className={s.App}>\r\n        <Searchbar onSearch={this.onSearch} />\r\n        {images.length > 0 && (\r\n          <ImageGalleryItem\r\n            images={images}\r\n            openModal={this.openModal}\r\n          />\r\n        )}\r\n\r\n        {isLoading && <Loader />}\r\n        {images.length > 0 && <Button onFetchImage={this.fetchImages} />}\r\n        {isModalOpen && (\r\n          <Modal onClose={this.closeModal} largeImageURL={largeImageURL} />\r\n        )}\r\n        {error && <ToastContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}